name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set Java
      uses: actions/setup-java@v3
      with:
          java-version: '17'
          distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Set up application.properties for prod
      run: echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application-prod.properties

    - name: Set up application.properties for test
      run: echo "${{ secrets.APPLICATION_TEST }}" > ./src/test/resources/application.properties

    - name: Run build with Gradle Wrapper
      run: ./gradlew build

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }} # dockerhub name
        password: ${{ secrets.DOCKER_HUB_TOKEN }} # dockerhub password

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/my-app:latest

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Deploy to AWS EC2
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} <<EOF
          docker pull ${{ secrets.DOCKER_USERNAME }}/my-app:latest
          docker stop my-app || true
          docker rm my-app || true
          docker run -d --name my-app -p 80:8080 ${{ secrets.DOCKER_USERNAME }}/my-app:latest
        EOF
